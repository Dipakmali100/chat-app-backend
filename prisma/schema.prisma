// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int         @id @default(autoincrement())
  username          String      @unique
  password          String
  imgUrl            String
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @default(now())
  firstConnections  Connection[] @relation("ConnectionFirstUser")
  secondConnections Connection[] @relation("ConnectionSecondUser")
  senderMessages    Message[]    @relation("MessageSender")
  receiverMessages  Message[]    @relation("MessageReceiver")
}

model Connection {
  id            Int       @id @default(autoincrement())
  firstUserId   Int 
  secondUserId  Int
  createdAt     DateTime  @default(now())
  firstUser     User      @relation("ConnectionFirstUser", fields: [firstUserId], references: [id])
  secondUser    User      @relation("ConnectionSecondUser", fields: [secondUserId], references: [id])
  
  @@unique([firstUserId, secondUserId])
  @@unique([secondUserId, firstUserId])

  @@index([firstUserId, secondUserId])
  @@index([secondUserId, firstUserId])
}

model Message {
  id            Int       @id @default(autoincrement())
  senderId      Int
  receiverId    Int
  content       String
  status        String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  sender        User      @relation("MessageSender", fields: [senderId], references: [id])
  receiver      User      @relation("MessageReceiver", fields: [receiverId], references: [id])
}